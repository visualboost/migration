name: Run Tests

on:
  push:
    branches: [ "develop" ]

jobs:
  test_and_merge:
    name: Increase Version and merge with main branch
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.MIGRATION_ACTION_ACCESS_TOKEN }}
        fetch-depth: 0

    # Fetch all tags
    - name: Fetch all tags to create new version number
      if: "!contains(github.event.head_commit.message, '[KEEP_VERSION]')"
      run: |
        git config user.name ${{ secrets.USER }}
        git config user.email ${{ secrets.EMAIL }}
        git fetch --all --tag
        git tag

    # Get new version number
    - name: Get Version Number
      if: "!contains(github.event.head_commit.message, '[KEEP_VERSION]')"
      id: get_version
      uses: paulhatch/semantic-version@v5.2.1
      with:
        major_pattern: "[MAJOR]"
        minor_pattern: "[MINOR]"
        debug: true
        version_format: "${major}.${minor}.${patch}"

    # Increase the current application version
    - name: Increase version in package.json
      if: "!contains(github.event.head_commit.message, '[KEEP_VERSION]')"
      run: |
        npm version --allow-same-version ${{steps.get_version.outputs.version}}

    # Commit the new version
    - name: Commit and push version
      if: "!contains(github.event.head_commit.message, '[KEEP_VERSION]')"
      run: |
        git config user.name ${{ secrets.USER }}
        git config user.email ${{ secrets.EMAIL }}
        git add .
        git commit -m "Auto-commit: set version to ${{steps.get_version.outputs.version}}"
        git push origin develop

    # Create new version tag
    - name: Tag version
      if: "!contains(github.event.head_commit.message, '[KEEP_VERSION]')"
      run: |
        git tag ${{steps.get_version.outputs.version_tag}}
        git push origin ${{steps.get_version.outputs.version_tag}}

    # Merge into main branch to build new docker image
    - name: Merge into main branch
      run: |
        git config user.name ${{ secrets.USER }}
        git config user.email ${{ secrets.EMAIL }}
        git checkout main
        git pull
        git merge --no-ff develop -m "Auto-merge: ${{ github.event.head_commit.message }} [BUILD IMAGE]"
        git push origin main
